<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- Acción Servidor para Exportación Unificada desde Asientos Contables -->
    <record id="action_export_unified_versat_server" model="ir.actions.server">
        <field name="name">Exportar a VERSAT</field>
        <field name="model_id" ref="account.model_account_move"/>
        <field name="binding_model_id" ref="account.model_account_move"/>
        <field name="binding_view_types">list,form</field>
        <field name="state">code</field>
        <field name="code">
# Para modo múltiple: usar active_ids del contexto en lugar de record.ids
if env.context.get('active_ids'):
    active_ids = env.context.get('active_ids')
else:
    active_ids = record.ids if record else []
    
wizard = env['versat.unified.export.wizard'].create({})
action = wizard.with_context(active_ids=active_ids).action_export_unified()
        </field>
    </record>

    <!-- Acción Servidor para Exportación desde Pedidos POS -->
    <record id="action_export_unified_versat_pos_server" model="ir.actions.server">
        <field name="name">Exportar a VERSAT</field>
        <field name="model_id" ref="point_of_sale.model_pos_order"/>
        <field name="binding_model_id" ref="point_of_sale.model_pos_order"/>
        <field name="binding_view_types">list,form</field>
        <field name="state">code</field>
        <field name="code">
# Para modo múltiple: usar active_ids del contexto
if env.context.get('active_ids'):
    active_ids = env.context.get('active_ids')
else:
    active_ids = record.ids if record else []

# Obtener los asientos contables asociados a los pedidos POS
pos_orders = env['pos.order'].browse(active_ids)
move_ids = []

for order in pos_orders:
    if order.account_move:
        move_ids.append(order.account_move.id)
    else:
        # Buscar asientos por referencia
        moves = env['account.move'].search([
            ('ref', 'ilike', f'/POS/{order.id}'),
            ('state', '=', 'posted')
        ])
        if moves:
            move_ids.append(moves[0].id)

if not move_ids:
    raise UserError('No se encontraron asientos contables para los pedidos POS seleccionados.')

wizard = env['versat.unified.export.wizard'].create({})
action = wizard.with_context(active_ids=move_ids).action_export_unified()
        </field>
    </record>
</odoo>